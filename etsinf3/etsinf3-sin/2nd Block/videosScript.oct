#!/usr/bin/octave  -qf

printf("\n ############# \n Changing alpha \n ############# \n \n");
bestAlpha=0;
bestAlphaErrors=realmax;
load("videos"); [N,L]=size(data); D=L-1;
ll=unique(data(:,L)); C=numel(ll);
rand("seed",23); data=data(randperm(N),:);
NTr=round(.7*N); M=N-NTr; te=data(NTr+1:N,:);
printf("#      a   E   k Ete\n");
printf("#------- --- --- ---\n");
for a=[.1 1 10 100 1000 10000 100000]
	E=1;
	IsSignificant = true;
	previousError = realmax;
	numIter = 200;
	while(E!=0 && numIter <= 1080 && IsSignificant)
		[w,E,k]=perceptron(data(1:NTr,:),0.1,a,numIter); rl=zeros(M,1);
		for n=1:M rl(n)=ll(linmach(w,[1 te(n,1:D)]')); end
		[nerr m]=confus(te(:,L),rl);
		printf("|");
		numIter=numIter*1.75;
		if(previousError < E*10)
			IsSignificant = false;
		endif
		previousError = E;
	endwhile
	printf("%8.1f %3d %3d %3d\n",a,E,k,nerr);
	if(bestAlphaErrors > nerr)
		bestAlphaErrors = nerr;
		bestAlpha = a;
	endif
end

printf("\n ############# \n Changing beta \n ############# \n \n");
bestBeta=0;
bestBetaErrors=realmax;
numIter=200;
load("videos"); [N,L]=size(data); D=L-1;
ll=unique(data(:,L)); C=numel(ll);
rand("seed",23); data=data(randperm(N),:);
NTr=round(.7*N); M=N-NTr; te=data(NTr+1:N,:);
printf("#      b   E   k Ete\n");
printf("#------- --- --- ---\n");
for b=[.1 1 10 100 1000 10000 100000]
	E=1;
	IsSignificant = true;
	previousError = realmax;
	numIter = 200;
	while(E!=0 && numIter <= 1080 && IsSignificant)
		[w,E,k]=perceptron(data(1:NTr,:),b,bestAlpha,numIter); rl=zeros(M,1);
		for n=1:M rl(n)=ll(linmach(w,[1 te(n,1:D)]')); end
		[nerr m]=confus(te(:,L),rl);
		printf("|");
		numIter=numIter*1.75;
		if(previousError < E*10)
			IsSignificant = false;
		endif
		previousError = E;
	endwhile
	printf("%8.1f %3d %3d %3d\n",b,E,k,nerr);
	if(bestBetaErrors > nerr)
		bestBetaErrors = nerr;
		bestBeta = b;
	endif
end

bestAlpha
bestBeta

nerr=bestBetaErrors; output_precision(2);
m=nerr/M
s=sqrt(m*(1-m)/M)
r=1.96*s
printf("I=[%.3f, %.3f]\n",m-r,m+r);

printf("\n ############# \n Final Training \n ############# \n \n");

load("videos");
[w,E,k]=perceptron(data,bestBeta,bestAlpha,1000); [E k]
save_precision(4);
save("videos_w","w");   # filename = videos_w
